********************Class 1****************************************:
What is TestNG:
Testing is a tool we use to automate applicatons.
Why do we need TestNg:
reports
parallel execution
annotation based execution
data driven testing
multiple option execution

@Test annotation - this is a main annotation of testing to execute out Test Case
it is execute test case in alphabetical order by default
@BeforeMethod  -  as a precondition that executes before each test case
@AfterMethod -  as postcondition that executes after each test case

********************Class 2*****************************************:
User story 12345 - Admin user should login with valid credentials
User story 22345- Verify my Title of application
****************************************************************************************
Priority - by default it is sat to 0 to prioritize the tes cases. we use this attribute
@Test(priority=1)
Enable and disable - to make any test case enabled or disabled temporarily we use  this attribute
@Test(enable=false) || @Test(enable=true)
@Test(priority=1, enable=false)

Hard Assertion - Assertions we use for small execution because it stops executing if encounters error
Soft Assertion - Assertions we use to execute complete code with multiple check points
and in the end we use assertAll methods to get the collective failure of test case

mac users - option cmd L
windows users - clt alt L

Testing .xml where highest level is suite--> test-->packages-->class-->method

groups - we use different groups to separate the cases

alwaysrun=true ->>we use this attribute to execute the pre and post condition from testing xml file

***************************************Class 3************************************************
@BeforeClass and @AfterClass - it is executes before class and every class - annotation

priority -  we use this attribute to prioritize our test case

enable and disable - to make any test case disable or enabled, we use this attribute.
By default all test case is enable =true

Assertion: we use assertions for verification and validation
we have two type of assertions:
Hard Assertion - the moment it identifies an error, it stops execution
Soft Assertion- it collects all the failure till the end and allows our complete code to execute
we use assertAll method to get the collection failure from it

dependsOn-to mention the name of depending test case in dependent test case, we use this attribute

testng.xml file -  to execute all the case or some of the test case in a single shot
Batch execution is possible due to texting.xml file

package wise
method wise
class wise
group wise

smoke-checking the key functionality of the application- quick testing
regression-checking the fixed module and other module as well is regression testing


Data provider -  it returns 20 array which we use to perform data driven testing
Listener